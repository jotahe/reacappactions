name: CI
on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: ~/.npm # path
          key: ${{ runner.os}}-node-${{ hashFiles('**/package-lock.json') }} # Cache key for retrieve, depending if our npm dependacies have changed
          restore-keys: | # Check for all caches that starts with the parameter
            ${{ runner.os}}-node-
      - name: Use NodeJS
        uses: actions/setup-node@v1
        with:
          #node-version: "12.x"  modified node version required for semantic release
          node-version: "14.17"
      - run: npm ci # more suitable for ci workflows
      - run: npm run format:check
      - run: npm test -- --coverage
        env:
          CI: true
      - name: Upload Test Coverage
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage # name of the coverage file
          path: coverage # Folder where the coverage is stored
      - name: Build Project
        if: github.event_name == 'push'
        run: npm run build
      - name: Upload Build Folder # We would upload the build
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v1
        with:
          name: build # name of the build
          path: build # Folder where the build is stored
      #- name: Download Build Folder    # Exists the download action as well
      #  uses: actions/download-artifact@v1
      - name: Create a Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
      - name: Deploy to Stage
        if: github.event_name == 'push'
        run: npx surge --project ./build --domain herrancorp.surge.sh
        env:
          SURGE_LOGIN: ${{secrets.SURGE_LOGIN}}
          SURGE_TOKEN: ${{secrets.SURGE_TOKEN }}
